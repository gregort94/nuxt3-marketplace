datasource db {
  url       = env("DATABASE_URL")
  provider  = "postgresql"
  directUrl = env("DIRECT_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

model Category {
  id       String                 @id @default(uuid())
  name     String                 @unique
  products CategoriesOnProducts[]
}

model Product {
  id         String                 @id @default(uuid())
  name       String                 @unique
  price      Int
  rating     Decimal
  imageUrl   String
  createdAt  DateTime               @default(now())
  updatedAt  DateTime               @updatedAt
  cartItem   CartItem[]
  orderItem  OrderItem[]
  categories CategoriesOnProducts[]
}

model CategoriesOnProducts {
  productId  String
  categoryId String
  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}

model CartItem {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  productId String
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}

enum PaymentMethod {
  CARD
  CASH
}

model Order {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  address       String
  paymentMethod PaymentMethod
  orderItems    OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Int

  @@unique([orderId, productId])
}
